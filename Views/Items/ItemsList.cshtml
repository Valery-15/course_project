@using Microsoft.AspNetCore.Identity
@using CollectionsApp.Models
@using Microsoft.AspNetCore.Mvc;
@using Markdig
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    bool isUserSignedIn = signInManager.IsSignedIn(this.User);
    bool isCurrentUserAdmin = this.User.IsInRole("admin");
    bool isCurrentUserCollectionOwner = ViewBag.collection.User.Id.Equals(userManager.GetUserId(this.User));
    string collectionOwner = isCurrentUserCollectionOwner ? "You" : ViewBag.collection.User.UserName;
}

<div>
    <nav class="navbar">
        <form>
            <label class="h4 text-info">
                Collection: @ViewBag.collection.Title<br />
                Theme: @ViewBag.collection.Theme<br />
                Owner: <a href="/Collections/CollectionsList?collectionsOwnerId=@ViewBag.collection.UserId">@collectionOwner</a>
            </label>
        </form>
        @if (isUserSignedIn && (isCurrentUserAdmin || isCurrentUserCollectionOwner))
        {
            <form class="form-inline">
                <a asp-controller="Items" asp-action="CreateItem" asp-route-collectionId="@ViewBag.collection.Id" class="btn btn-outline-success">
                    <i class="bi bi-plus-circle"></i>
                </a>
            </form>
        }

    </nav>

    <table class="table table-bordered" id="itemsTable">
        <thead class="thead-dark">
            <tr>
                <th>Item</th>
                <th>Tags</th>
                @if (isUserSignedIn && (isCurrentUserAdmin || isCurrentUserCollectionOwner))
                {
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script>
    var collectionId = '@ViewBag.collection.Id';
    var isUserSignedIn = '@isUserSignedIn'.toLowerCase() == 'true';
    var isCurrentUserAdmin = '@isCurrentUserAdmin'.toLowerCase()=='true';
    var isCurrentUserCollectionOwner = '@isCurrentUserCollectionOwner'.toLowerCase()=='true';

    console.log(collectionId);
    console.log(isUserSignedIn);

    

    var itemsTable = document.getElementById('itemsTable');

    updateItemsList();

    function updateItemsList() {
        var url = '/Items/GetItemsList?collectionId=' + collectionId;
        fetch(url)
            .then(res => res.json())
            .then(data => {
                console.log('data: ', data)
                clearTable(itemsTable, 1);

                data.forEach((item) => {
                    var tr = document.createElement('tr');
                    var td;

                    td = document.createElement('td');
                    var a = document.createElement('a');
                    var linkText = document.createTextNode(item.title);
                    a.appendChild(linkText);
                    a.href = "/Items/Item?itemId=" + item.id;
                    td.appendChild(a);
                    tr.appendChild(td);

                    td = document.createElement('td');
                    var tags = JSON.parse(item.jsonTags);
                    console.log(tags);
                    tags.forEach(tag => {
                        console.log(tag.Id);
                        a = document.createElement('a');
                        linkText = document.createTextNode("#" + tag.TagValue + " ");
                        a.appendChild(linkText);
                        a.href = "/Tags/GetItemsByTag?tagId=" + tag.Id;
                        td.appendChild(a);
                    });
                    tr.appendChild(td);

                    if (isUserSignedIn && (isCurrentUserAdmin || isCurrentUserCollectionOwner)) {
                        td = document.createElement('td');
                        a = document.createElement('a');
                        var i = document.createElement('i');
                        i.className = "bi bi-pencil";
                        a.appendChild(i);
                        a.className = "btn btn-outline-success"
                        a.href = "/Items/EditItem?itemId=" + item.id;
                        td.appendChild(a);

                        a = document.createElement('a');
                        i = document.createElement('i');
                        i.className = "bi bi-trash";
                        a.appendChild(i);
                        a.className = "btn btn-outline-danger";
                        a.href = "/Items/DeleteItem?itemId=" + item.id;
                        td.appendChild(a);
                        tr.appendChild(td);
                    }

                    itemsTable.append(tr);
                });
                setTimeout(updateItemsList, 5000);
            })
            .catch(e => {
                console.log('Error: ', e);
                setTimeout(updateItemsList, 5000);
            });
    }

    function clearTable(table, offset = 0) {
        let rowCount = table.rows.length;
        for (var i = offset; i < rowCount; i++) {
            table.deleteRow(offset);
        }
    }
</script>

