
@if (this.User.IsInRole("admin"))
{
    <a href="/Users/Index">Manage Users</a>
}

<div>
    <nav class="navbar navbar-light bg-success bg-light">
        <form class="form-inline">
            <h1>My Collections</h1>
        </form>
        <form class="form-inline">
            <a href="/Collections/AddCollection" class="btn btn-outline-success"><i class="bi bi-plus-circle"></i></a>
            <a href="/Collections/DeleteCollections" class="btn btn-outline-success"><i class="bi bi-trash"></i></a>



            <button class="btn btn-outline-success" data-toggle="tooltip" data-placement="top" title="Edit collection"><i class="bi bi-pencil"></i></button>

        </form>
    </nav>

    <table class="table table-striped table-bordered" id="collectionsTable">
        <thead class="thead-dark">
            <tr>
                <th></th>
                <th>Title</th>
                <th>Theme</th>
                <th>Description</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<script>
    var collectionsTable = document.getElementById('collectionsTable');

    updateCollectionsList();

    function updateCollectionsList() {
        var url = 'Collections/UpdateCollectionsList';
        fetch(url)
            .then(res => res.json())
            .then(data => {
                console.log('data: ', data)
                clearTable(collectionsTable, 1);

                data.forEach((collection) => {
                    var tr = document.createElement('tr');
                    var td;

                    td = document.createElement('td');
                    var checkbox = document.createElement("INPUT");
                    checkbox.setAttribute("type", "checkbox");
                    checkbox.id = collection.id;
                    td.innerHTML = checkbox;
                    tr.appendChild(td);

                    td = document.createElement('td');
                    td.innerHTML = collection.title;
                    tr.appendChild(td);

                    td = document.createElement('td');
                    td.innerHTML = collection.theme;
                    tr.appendChild(td);

                    td = document.createElement('td');
                    td.innerHTML = collection.description;
                    tr.appendChild(td);

                    td = document.createElement('td');
                    var button = document.createElement("button");
                    button.onclick = "/Collections/EditCollection?id=" + collection.id;
                    td.innerHTML = button;
                    tr.appendChild(td);

                    collectionsTable.append(tr);
                });
                setTimeout(updateCollectionsList, 5000);
            })
            .catch(e => {
                console.log('Error: ', e);
                setTimeout(updateCollectionsList, 5000);
            });
    }

    function clearTable(table, offset = 0) {
        let rowCount = table.rows.length;
        for (var i = offset; i < rowCount; i++) {
            table.deleteRow(offset);
        }
    }
</script>
